<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/Colors.xaml" />
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/CommonControls.xaml" />
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="OptionMark">F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z</Geometry>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource CheckBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBox.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource CheckBox.Static.ForegroundColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Top"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="Center"
                                Margin="1"
                                VerticalAlignment="Center">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      Data="{StaticResource OptionMark}"
                                      Fill="{TemplateBinding BorderBrush}"
                                      Margin="1"
                                      Opacity="0"
                                      Stretch="None"/>
                                <Border x:Name="indeterminateMark"
                                        Background="{TemplateBinding BorderBrush}"
                                        Margin="2" 
                                        Opacity="0"
                                        CornerRadius="1"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="cp" Grid.Column="1" Style="{DynamicResource AccentContentPresenter14}" HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <!--RecognizesAccessKey="True"-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="5,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.BorderBrush}"/>
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource CheckBox.MouseOver.ForegroundColor}"></Setter>
                            <!--<Setter Property="TextElement.Foreground" TargetName="cp" Value="{StaticResource CheckBox.MouseOver.ForegroundColor}"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Disabled.BorderBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.Disabled.Glyph}"/>
                            <Setter Property="Background" TargetName="indeterminateMark" Value="{StaticResource CheckBox.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Pressed.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.Selected.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment}"></Setter>
        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="Center"
                                Margin="1"
                                VerticalAlignment="Center">
                            <Grid x:Name="markGrid" HorizontalAlignment="Left">
                                <Path x:Name="optionMark"
                                      Data="{StaticResource OptionMark}"
                                      Fill="{TemplateBinding BorderBrush}"
                                      Margin="1"
                                      Opacity="0"
                                      Stretch="None"/>
                                <Border x:Name="indeterminateMark"
                                        Background="{TemplateBinding BorderBrush}"
                                        Margin="2" 
                                        Opacity="0"
                                        CornerRadius="1"/>
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Column="1" Style="{DynamicResource AccentContentPresenter14}" HorizontalAlignment="Left"></ContentPresenter>
                    </Grid>
                    <!--RecognizesAccessKey="True"-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Accent.LightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Disabled.BorderBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.Disabled.Glyph}"/>
                            <Setter Property="Background" TargetName="indeterminateMark" Value="{StaticResource CheckBox.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Accent.DarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>