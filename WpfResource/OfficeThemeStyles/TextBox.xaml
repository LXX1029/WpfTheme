<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:controls="clr-namespace:WpfThemes.Controls"
                     xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/Colors.xaml" />
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBlock.FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="TextBlock.FontSize" Value="14"></Setter>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"></Setter>
        <Setter Property="CaretBrush" Value="{StaticResource TextBox.Focus.BorderBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextBox.Static.ForegroundColor}"/>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.BorderBrush}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <!--通用TextBox-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBox}">
        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment}"></Setter>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Center"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1.5"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AccentTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBox}">
        <Setter Property="Width" Value="{Binding Width}"></Setter>
        <Setter Property="Height" Value="{Binding Height}"></Setter>
        <Setter Property="MinWidth" Value="30"></Setter>
        <Setter Property="MinHeight" Value="28"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      Margin="0,2,0,0"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>-->
    </Style>

    <!--AccentTextBoxMultiLine-->
    <Style x:Key="AccentTextBoxMultiLine" BasedOn="{StaticResource BaseTextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="AcceptsReturn" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"
                            Background="{TemplateBinding Background}" 
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Top"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AccentTextBoxMultiLine-->
    <Style x:Key="AccentTextBoxMsg" BasedOn="{StaticResource BaseTextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="AcceptsReturn" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"
                            Background="{TemplateBinding Background}" 
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Top" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>

        </Setter>
    </Style>


    <Style TargetType="{x:Type PasswordBox}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"></Setter>
        <Setter Property="Width" Value="{Binding Width}"></Setter>
        <Setter Property="Height" Value="{Binding Height}"></Setter>-->
        <Setter Property="MinWidth" Value="50"></Setter>
        <Setter Property="MinHeight" Value="25"></Setter>
        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment}"></Setter>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment}"></Setter>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBlock.FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="TextBlock.FontSize" Value="14"></Setter>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"></Setter>
        <Setter Property="CaretBrush" Value="{StaticResource Accent.DarkColor}"></Setter>
        <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.BorderBrush}"></Setter>
        <Setter Property="ContextMenu" Value="{x:Null}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                             HorizontalAlignment="Stretch" VerticalAlignment="Center"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AccentPasswordBox" TargetType="{x:Type PasswordBox}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"></Setter>-->
        <Setter Property="Width" Value="{Binding Width}"></Setter>
        <Setter Property="Height" Value="{Binding Height}"></Setter>
        <Setter Property="MinWidth" Value="30"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Light}"/>
        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBlock.FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="TextBlock.FontSize" Value="13"></Setter>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"></Setter>
        <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush.Light}"></Setter>
        <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.BorderBrush}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--输入TextBox样式 带下划线-->
    <Style TargetType="{x:Type controls:TextBoxUnderLine}" BasedOn="{StaticResource BaseTextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="MinWidth" Value="100"></Setter>
        <!--<Setter Property="MaxWidth" Value="430"></Setter>-->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment"  Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Bottom"></Setter>
        <Setter Property="TextBlock.TextWrapping" Value="NoWrap"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  controls:TextBoxUnderLine}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding LabName}" Margin="0,0,5,0" HorizontalAlignment="Right"  VerticalAlignment="Bottom" FlowDirection="RightToLeft" Style="{DynamicResource AccentTextBlock14}"></TextBlock>
                        <Border Grid.Column="1" BorderBrush="{StaticResource TextBox.Static.BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" BorderThickness="0,0,0,2">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"
                     FontSize="{TemplateBinding FontSize}"></ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--带文本的TextBox-->
    <Style TargetType="{x:Type controls:DzpTextBox}" BasedOn="{StaticResource BaseTextBox}">
        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment}"></Setter>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DzpTextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding LabName}" Margin="0,0,5,0" HorizontalAlignment="Right"  VerticalAlignment="Center" Style="{DynamicResource AccentTextBlock14}"></TextBlock>
                        <Border x:Name="border" Grid.Column="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{Binding ContentWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="Left" VerticalAlignment="Center"
                            SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"
                                          FontSize="{TemplateBinding FontSize}"/>

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.BorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1.5"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.BorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#region toolkit-->
    <Style TargetType="{x:Type toolkit:IntegerUpDown}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Light}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.BorderBrush}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"></Setter>
        <Style.Resources>
            <!--WatermarkTextBox Style-->
            <Style TargetType="{x:Type toolkit:WatermarkTextBox}"
               BasedOn="{StaticResource {x:Type toolkit:WatermarkTextBox}}">
                <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush.Light}"></Setter>
                <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.BorderBrush}"></Setter>
                <Setter Property="BorderThickness" Value="0,0,2,0"></Setter>
                <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type toolkit:WatermarkTextBox}">
                            <Border x:Name="Border" MinHeight="25"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,0" Background="{TemplateBinding Background}" 
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" SnapsToDevicePixels="True">
                                <!--内容Grid-->
                                <Grid VerticalAlignment="Center">
                                    <ScrollViewer x:Name="PART_ContentHost" Style="{DynamicResource ScorllStyle}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <!--<ContentPresenter x:Name="PART_WatermarkHost" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}"
                              VerticalAlignment="Stretch" Margin="0,2,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="False" Visibility="Collapsed" />-->
                                    <TextBlock Text="{TemplateBinding Watermark}" VerticalAlignment="Stretch" Margin="0,2,0,0"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  IsHitTestVisible="False" Visibility="Collapsed" 
                                               Style="{StaticResource AccentTextBlock14}"></TextBlock>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--上下箭头Style-->
            <Style TargetType="{x:Type toolkit:ButtonSpinner}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:ButtonSpinner}">
                            <!--整体Border-->
                            <Border x:Name="Border" Background="Transparent" BorderBrush="{StaticResource TextBox.Static.BorderBrush}" BorderThickness="1"  SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Grid Grid.Column="1" Width="19" Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <RepeatButton  x:Name="PART_IncreaseButton" IsTabStop="{TemplateBinding IsTabStop}">
                                            <RepeatButton.ContentTemplate>
                                                <DataTemplate>
                                                    <Path x:Name="pUp" Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" Focusable="False" Fill="{StaticResource ForegroundBrush.Light}" HorizontalAlignment="Center" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" TargetName="pUp" Value="{StaticResource Accent.DarkBrush}"></Setter>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </RepeatButton.ContentTemplate>
                                        </RepeatButton>
                                        <RepeatButton x:Name="PART_DecreaseButton" Background="Transparent" IsTabStop="{TemplateBinding IsTabStop}" Grid.Row="1" >
                                            <RepeatButton.ContentTemplate>
                                                <DataTemplate>
                                                    <Path x:Name="pDown" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Focusable="False" Fill="{StaticResource ForegroundBrush.Light}" HorizontalAlignment="Center" Height="4" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="7"/>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" TargetName="pDown" Value="{StaticResource Accent.DarkBrush}"></Setter>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </RepeatButton.ContentTemplate>
                                        </RepeatButton>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" SourceName="PART_IncreaseButton" Value="False">
                                    <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type RepeatButton}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"></Setter>
                        <!-- 右侧 上下箭头-->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" Background="{StaticResource Accent.DarkBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <ContentPresenter/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--鼠标悬浮样式-->
                                        <Trigger Property="IsMouseOver" SourceName="border" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.BasedOn>
            </Style>
        </Style.Resources>

    </Style>
    <!--#endregion-->

</ResourceDictionary>