<ResourceDictionary x:Class="WpfThemes.OfficeThemeStyles.WindowUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:WpfThemes"
                     xmlns:uc="clr-namespace:WpfThemes.UserControls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/Colors.xaml" />
        <ResourceDictionary Source="/WpfThemes;component/OfficeThemeStyles/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#region Window,Control,UserControl Style-->
    <Style TargetType="{x:Type Control}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>
    <!--#region  主窗口样式-->
    <Style x:Key="AccentMainWindow" TargetType="{x:Type Window}">
        <!--<Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="AllowsTransparency" Value="True"></Setter>-->
        <!--<Setter Property="WindowState" Value="Maximized"></Setter>-->
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="ResizeMode" Value="NoResize"></Setter>
        <Setter Property="MinHeight" Value="400"></Setter>
        <Setter Property="MinWidth" Value="400"></Setter>
        <Setter Property="Background" Value="{DynamicResource Window.BackgroundColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="mainBorder" BorderBrush="{DynamicResource Window.BorderColor}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1,0,1,1" CornerRadius="3,3,0,0"

                   >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--标题栏-->
                            <Grid x:Name="titleGrid" Background="{DynamicResource Window.TitleBarBackgroundColor}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <uc:ToolBarIconAndTitle ToolBarTitle="{Binding Title,RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}}"></uc:ToolBarIconAndTitle>
                                <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Fill="Transparent" MouseMove="titleGrid_MouseMove"                                  MouseLeftButtonDown="titleGrid_MouseLeftButtonDown" ></Rectangle>
                                <Border Grid.Column="2">
                                    <uc:ToolBarMinMaxClose  Margin="0,0,-1,5"></uc:ToolBarMinMaxClose>
                                </Border>
                            </Grid>

                            <!--内容-->
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter Margin="1" Content="{TemplateBinding Content}"></ContentPresenter>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--#endregion-->

    <Style x:Key="AccentWindow" TargetType="{x:Type Window}">
        <!--<Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="AllowsTransparency" Value="True"></Setter>-->
        <Setter Property="WindowState" Value="Maximized"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="ResizeMode" Value="NoResize"></Setter>
        <Setter Property="Background" Value="{DynamicResource Window.BackgroundColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="mainBorder" BorderBrush="{DynamicResource Window.BorderColor}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1,0,1,1" CornerRadius="3,3,0,0"

                   >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--标题栏-->
                            <Grid x:Name="titleGrid" Background="{DynamicResource Window.TitleBarBackgroundColor}"
MouseMove="titleGrid_MouseMove"                                  MouseLeftButtonDown="titleGrid_MouseLeftButtonDown">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <uc:ToolBarIconAndTitle ToolBarTitle="{Binding Title,RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}}"></uc:ToolBarIconAndTitle>
                                <Rectangle Grid.Column="1" Fill="Transparent" ></Rectangle>
                                <Border Grid.Column="2">
                                    <uc:ToolBarMinMaxClose  Margin="0,0,-1,5" SetSkinVisibility="Collapsed"></uc:ToolBarMinMaxClose>
                                </Border>
                            </Grid>

                            <!--内容-->
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter Margin="1" Content="{TemplateBinding Content}"></ContentPresenter>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="AccentUserControl" TargetType="{x:Type UserControl}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource Accent.DarkColor}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource Accent.DarkBrush}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
    </Style>
    <!--#endregion-->

    <Style x:Key="AccentScaleWindow" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <!--<Setter Property="AllowsTransparency" Value="True" />-->
        <Setter Property="Background" Value="Transparent"></Setter>
        <!--<Setter Property="Width" Value="800"/>
            <Setter Property="Height" Value="600"/>-->
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.3"></ScaleTransform>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border x:Name="border">
                            <Border.LayoutTransform>
                                <ScaleTransform></ScaleTransform>
                            </Border.LayoutTransform>
                            <DockPanel LastChildFill="True" Width="{TemplateBinding Width}">
                                <Grid Width="auto" Height="80" VerticalAlignment="Top" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                                    <StackPanel>
                                        <DockPanel Name="window"   Background="#4C9CFB" Height="40" >
                                            <TextBlock Name="txtTitle" Margin="10,0,0,0" Text="{Binding Title}" FontSize="18"   Foreground="White"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <Button Name="btnClose" Content="X" Width="25" Height="25" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="3,0"/>
                                        </DockPanel>
                                    </StackPanel>
                                </Grid>
                                <AdornerDecorator>
                                    <ContentPresenter Content="{Binding Content}" />
                                </AdornerDecorator>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames 
                                           Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"></EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                                           Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleY)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"></EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="rect"
                                           Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5"></EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>